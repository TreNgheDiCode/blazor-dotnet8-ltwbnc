@page "/user"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations


<SfGrid DataSource="@Users" AllowPaging="true" AllowSorting="true" AllowFiltering="true" AllowGrouping="true" @ref="Grid">
    <GridTemplates>
        <ToolbarTemplate>
            <SfToolbar>
                <ToolbarEvents Clicked="ToolbarClickHandler"></ToolbarEvents>
                <ToolbarItems>
                    <div class="d-flex flex-column">
                        <div>

                            <ToolbarItem Text="Thêm"></ToolbarItem>
                            <ToolbarItem Text="Cập nhật"></ToolbarItem>
                            <ToolbarItem Text="Xóa"></ToolbarItem>
                            <ToolbarItem Text="Sửa"></ToolbarItem>
                            <ToolbarItem Text="Hủy"></ToolbarItem>
                        </div>
                        <div>
                            <ToolbarItem Type="@ItemType.Button" PrefixIcon="e-chevron-up icon" Id="CollapseAll" Text="Thu gọn"></ToolbarItem>
                            <ToolbarItem Type="@ItemType.Button" PrefixIcon="e-chevron-down icon" Id="ExpandAll" Text="Mở rộng"></ToolbarItem>
                        </div>
                    </div>
                </ToolbarItems>
            </SfToolbar>
        </ToolbarTemplate>
    </GridTemplates>
    <GridGroupSettings Columns=@GroupOption>
        <CaptionTemplate>
            @{
                var data = (context as CaptionTemplateContext);
                <span>@data.HeaderText - @data.Key (@data.Count dòng)</span>
            }
        </CaptionTemplate>
    </GridGroupSettings>
    <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true"></GridEditSettings>
    <GridPageSettings PageSize="5">
    </GridPageSettings>
    <GridColumns>
        <GridColumn Field=@nameof(UserItem.Id) HeaderText="Mã người dùng"></GridColumn>
        <GridColumn Field=@nameof(UserItem.Fullname) HeaderText="Tên người dùng"></GridColumn>
        <GridColumn Field=@nameof(UserItem.Email) HeaderText="Email"></GridColumn>
        <GridColumn Field=@nameof(UserItem.CreatedAt) HeaderText="Ngày tạo" Format="dd/MM/yyyy" Type="ColumnType.DateOnly"></GridColumn>
        <GridColumn Field=@nameof(UserItem.IsLocked) HeaderText="Khóa">
            <Template>
                @{
                    var user = (context as UserItem);
                    <div>
                        @if (user!.IsLocked == true)
                        {
                            <span class="badge bg-danger">Đã khóa</span>
                        }
                        else
                        {
                            <span class="badge bg-success">Đang kích hoạt</span>
                        }
                    </div>
                }
            </Template>
        </GridColumn>
        <GridColumn Field=@nameof(UserItem.Role) HeaderText="Vai trò">
            <Template>
                @{
                    var user = (context as UserItem);
                    <div>
                        @if (user!.Role == "Admin")
                        {
                            <span class="badge bg-danger">Quản trị viên</span>
                        }
                        else
                        {
                            <span class="badge bg-success">Người dùng</span>
                        }
                    </div>
                }
            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>

@code {
    // STT, Tên, Email, Ngày tạo, Khóa, Ủy quyền, Thao tác
    public List<UserItem> Users { get; set; } = new();
    private SfGrid<UserItem> Grid;
    private List<string> ToolbarItems = new List<string>() { "Thêm", "Cập nhật", "Xóa", "Sửa", "Hủy" };
    private string[] GroupOption = (new string[] { "Id" });

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ServiceModel<UserList> result = await userService.GetUsers();

            if (result.Success == true && result.Data is not null)
            {
                Users = result.Data.Users;
            }
        }
        catch (Exception ex)
        {
            await DisplayDialog("Kiểm tra lại kết nối máy chủ", "Lỗi lấy danh sách người dùng");
        }
    }

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Text == "Thu gọn")
        {
            await this.Grid.CollapseAllGroupAsync();
        }
        if (args.Item.Text == "Mở rộng")
        {
            await this.Grid.ExpandAllGroupAsync();
            await this.Grid.CloseEditAsync();
        }
    }

    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }
}
