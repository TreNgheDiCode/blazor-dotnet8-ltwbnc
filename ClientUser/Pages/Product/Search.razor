@page "/search/{SearchQuery}"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@layout MainLayout

<h3>Product List</h3>

@if (loading)
{
    <p>Loading...</p>
}
else
{



    <h3 class="text-center mb-4">Products</h3>
    @if (products != null && products.Products.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in filteredProducts)
            {
                <div class="col">
                    <div class="product-card">
                        <img src="images/logongang.png" class="card-img-top img-fluid" alt="Product Image">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Description</p>
                        <div class="price">Price: <span>@string.Format("{0:0,0 đồng}", product.Price)</span></div>
                        <button class="btn btn-danger">Add to Cart</button>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-center">No products found.</p>
    }

}

@code {
    [Parameter]
    public string SearchQuery { get; set; }

    private ProductList? products;
    private List<ProductItem>? filteredProducts;
    private bool loading = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadAndFilterProducts();
    }

    protected override async Task OnParametersSetAsync()
    {
        // Gọi LoadAndFilterProducts mỗi khi tham số thay đổi
        await LoadAndFilterProducts();
    }

    private async Task LoadAndFilterProducts()
    {
        loading = true;
        ServiceModel<ProductList> result = await productService.GetProducts();

        if (result.Success == true)
        {
            products = result.Data;
            FilterProducts();
        }
        loading = false;
    }

    private void FilterProducts()
    {
        if (products != null)
        {
            if (!string.IsNullOrEmpty(SearchQuery)) // Sử dụng SearchQuery từ URL
            {
                // Sử dụng Contains thay vì StartsWith để tìm kiếm sản phẩm
                filteredProducts = products.Products
                    .Where(p => p.Name.Contains(SearchQuery, StringComparison.OrdinalIgnoreCase))
                    .ToList();
            }
            else
            {
                // Nếu không có từ khóa tìm kiếm, hiển thị tất cả sản phẩm
                filteredProducts = products.Products.ToList();
            }
        }
    }
}

